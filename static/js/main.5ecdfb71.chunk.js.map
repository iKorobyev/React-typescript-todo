{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","components/Header.tsx","components/AddTask.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","index","onToggleCompleted","onRemoveTask","className","completed","onClick","version","xmlns","x","y","viewBox","d","type","value","text","readOnly","TodoList","todos","map","Header","AddTask","onAddTask","useState","setText","addTask","length","Error","onChange","e","target","onKeyUp","key","placeholder","App","setTodos","selectedTodo","prevState","window","confirm","filter","_","currentIndex","ReactDOM","render","document","getElementById"],"mappings":"gOA2CeA,EAjCqB,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aASlE,OACI,sBAAKC,UAAS,oBAAeJ,EAAKK,UAAY,sBAAwB,IAAtE,UACI,sBAAKC,QAVW,WACpBJ,EAAkBF,IASd,UACI,mBAAGI,UAAU,kBAAb,SACI,qBAAKG,QAAQ,MAAMC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MAC3DC,QAAQ,sBADb,SAEI,sBAAMC,EAAE,sTAKhB,uBAAOC,KAAK,OAAOC,MAAOd,EAAKe,KAAMC,UAAQ,OAEjD,qBAAKV,QAjBM,WACfH,EAAaF,IAgBiBO,MAAM,6BAA6BG,QAAQ,sBAArE,SACI,sBAAMC,EAAE,8eCVTK,EAbqB,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAAOhB,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,aAC5D,OACI,mCACKe,EAAMC,KAAI,SAACnB,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAExBA,MAAOA,EACPD,KAAMA,EACNE,kBAAmBA,EACnBC,aAAcA,GALU,UAChBF,EADgB,aACND,EAAKe,KAAK,WCF7BK,EAVI,WACf,OACI,wBAAQhB,UAAU,eAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,gBAAd,gCCiCDiB,EAhCmB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EACvBC,mBAAS,IADc,mBACxCR,EADwC,KAClCS,EADkC,KAGzCC,EAAU,WACZ,GAAIV,EAAM,CACN,GAAIA,EAAKW,OAAS,GAAI,MAAM,IAAIC,MAAM,uPACtCL,EAAUP,GAEdS,EAAQ,KAWZ,OACI,0BAASpB,UAAU,iBAAnB,UACI,uBAAOS,KAAK,OAAOC,MAAOC,EAAMa,SAVnB,SAACC,GAClBL,EAAQK,EAAEC,OAAOhB,QAS2CiB,QAN5C,SAACF,GACH,UAAVA,EAAEG,KAAiBP,KAK2DQ,YAAY,uFAC1F,wBAAQ3B,QAASmB,EAAjB,SACI,qBAAKlB,QAAQ,MAAMC,MAAM,6BAA6BC,EAAE,MAAMC,EAAE,MAAMC,QAAQ,cAA9E,SACI,sBAAMC,EAAE,+OC6BbsB,EAtDH,WACR,IADc,EAYYX,mBAXI,CAC1B,CACIR,KAAM,2EACNV,WAAW,GAEf,CACIU,KAAM,2EACNV,WAAW,KARL,mBAYPa,EAZO,KAYAiB,EAZA,KA2Cd,OACI,sBAAK/B,UAAU,OAAf,UACI,cAAC,EAAD,IACA,sBAAMA,UAAU,gBAAhB,SACI,cAAC,EAAD,CAAUc,MAAOA,EAAOhB,kBAjCQ,SAACkC,GACzCD,GAAS,SAAAE,GACL,OAAOA,EAAUlB,KAAI,SAACnB,GAClB,OAAIA,IAASoC,EACF,2BACApC,GADP,IAEIK,WAAYL,EAAKK,YAGlBL,SAwBuDG,aAnBxC,SAACF,GAC3BqC,OAAOC,QAAQ,sMACfJ,GAAS,SAAAE,GACL,OAAOA,EAAUG,QAAO,SAACC,EAAGC,GAAJ,OAAqBzC,IAAUyC,aAkB3D,cAAC,EAAD,CAASpB,UAbW,SAACP,GACzB,OAAOoB,GAAS,SAAAE,GAAS,4BAAQA,GAAR,CAAmB,CACxCtB,KAAMA,EACNV,WAAW,eCvCvBsC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5ecdfb71.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {IRemoveTask, ITodo, IToggleCompleted} from \"../types/types\";\r\n\r\ninterface TodoItemProps {\r\n    todo: ITodo;\r\n    index: number;\r\n    onToggleCompleted: IToggleCompleted;\r\n    onRemoveTask: IRemoveTask;\r\n}\r\n\r\nconst TodoItem: FC<TodoItemProps> = ({todo, index, onToggleCompleted, onRemoveTask}) => {\r\n    const toggleCompleted = () => {\r\n        onToggleCompleted(todo);\r\n    }\r\n\r\n    const removeTask = () => {\r\n        onRemoveTask(index);\r\n    }\r\n\r\n    return (\r\n        <div className={`todo-item ${todo.completed ? 'todo-item-completed' : ''}`}>\r\n            <div onClick={toggleCompleted}>\r\n                <i className=\"todo-item__icon\">\r\n                    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                         viewBox=\"0 0 426.667 426.667\">\r\n                        <path d=\"M421.876,56.307c-6.548-6.78-17.352-6.968-24.132-0.42c-0.142,0.137-0.282,0.277-0.42,0.42L119.257,334.375\r\n        l-90.334-90.334c-6.78-6.548-17.584-6.36-24.132,0.42c-6.388,6.614-6.388,17.099,0,23.713l102.4,102.4\r\n        c6.665,6.663,17.468,6.663,24.132,0L421.456,80.44C428.236,73.891,428.424,63.087,421.876,56.307z\"/>\r\n                    </svg>\r\n                </i>\r\n                <input type='text' value={todo.text} readOnly/>\r\n            </div>\r\n            <svg onClick={removeTask} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512.001 512.001\">\r\n                <path d=\"M284.286,256.002L506.143,34.144c7.811-7.811,7.811-20.475,0-28.285c-7.811-7.81-20.475-7.811-28.285,0L256,227.717\r\n        L34.143,5.859c-7.811-7.811-20.475-7.811-28.285,0c-7.81,7.811-7.811,20.475,0,28.285l221.857,221.857L5.858,477.859\r\n        c-7.811,7.811-7.811,20.475,0,28.285c3.905,3.905,9.024,5.857,14.143,5.857c5.119,0,10.237-1.952,14.143-5.857L256,284.287\r\n        l221.857,221.857c3.905,3.905,9.024,5.857,14.143,5.857s10.237-1.952,14.143-5.857c7.811-7.811,7.811-20.475,0-28.285\r\n        L284.286,256.002z\"/>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React, {FC} from 'react';\r\nimport {IRemoveTask, ITodo, IToggleCompleted} from \"../types/types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\ninterface TodoListProps {\r\n    todos: ITodo[];\r\n    onToggleCompleted: IToggleCompleted;\r\n    onRemoveTask: IRemoveTask;\r\n}\r\n\r\nconst TodoList: FC<TodoListProps> = ({todos, onToggleCompleted, onRemoveTask}) => {\r\n    return (\r\n        <>\r\n            {todos.map((todo, index) => <TodoItem\r\n                key={`${index}__${todo.text[1]}`}\r\n                index={index}\r\n                todo={todo}\r\n                onToggleCompleted={onToggleCompleted}\r\n                onRemoveTask={onRemoveTask}/>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {FC} from 'react';\r\n\r\nconst Header: FC = () => {\r\n    return (\r\n        <header className=\"todo__header\">\r\n            <div className=\"container\">\r\n                <h1 className=\"header__title\">React TS ToDo</h1>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {FC, useState} from 'react';\r\nimport {IAddTask} from \"../types/types\";\r\n\r\ninterface AddTaskProps {\r\n    onAddTask: IAddTask;\r\n}\r\n\r\nconst AddTask: FC<AddTaskProps> = ({onAddTask}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const addTask = () => {\r\n        if (text) {\r\n            if (text.length > 35) throw new Error('Допустимой количество символов 35. Заменю позже)')\r\n            onAddTask(text)\r\n        }\r\n        setText('');\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') addTask();\r\n    }\r\n\r\n    return (\r\n        <section className=\"todo__add-task\">\r\n            <input type='text' value={text} onChange={handleChange} onKeyUp={handleKeyUp} placeholder=\"Введите задачу...\" />\r\n            <button onClick={addTask}>\r\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M492,236H276V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v216H20c-11.046,0-20,8.954-20,20s8.954,20,20,20h216\r\n\t\t\tv216c0,11.046,8.954,20,20,20s20-8.954,20-20V276h216c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z\"/>\r\n                </svg>\r\n            </button>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddTask;","import React, {useState} from 'react';\nimport {IAddTask, IRemoveTask, ITodo, IToggleCompleted} from \"./types/types\";\nimport TodoList from \"./components/TodoList\";\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n    const initialTodos: ITodo[] = [\n        {\n            text: 'Написать Todo на React',\n            completed: true\n        },\n        {\n            text: 'Доделать Todo на React',\n            completed: false\n        }\n    ]\n\n    const [todos, setTodos] = useState(initialTodos);\n\n    const onToggleCompleted: IToggleCompleted = (selectedTodo: ITodo) => {\n        setTodos(prevState => {\n            return prevState.map((todo) => {\n                if (todo === selectedTodo) {\n                    return {\n                        ...todo,\n                        completed: !todo.completed\n                    }\n                }\n                return todo;\n            })\n        })\n    }\n\n    const onRemoveTask: IRemoveTask = (index) => {\n        if (window.confirm('Вы уверены, что хотите удалить запись?')) {\n            setTodos(prevState => {\n                return prevState.filter((_, currentIndex) => index !== currentIndex)\n            })\n        }\n    }\n\n    const onAddTask: IAddTask = (text: string) => {\n        return setTodos(prevState => [...prevState, {\n            text: text,\n            completed: false\n        }])\n    }\n\n    return (\n        <div className='todo'>\n            <Header />\n            <main className=\"todo__content\">\n                <TodoList todos={todos} onToggleCompleted={onToggleCompleted} onRemoveTask={onRemoveTask}/>\n            </main>\n            <AddTask onAddTask={onAddTask} />\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './scss/app.scss'\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}